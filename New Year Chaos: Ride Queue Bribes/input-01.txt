2
8
5 1 2 3 7 8 6 4
8
1 2 5 3 7 8 6 4




### answers
Too chaotic
7

2
8
5 1 2 3 7 8 6 4
8
1 2 5 3 7 8 6 4


## go 1-n
if within 2 spaces - put in place; push the sub into an arr;
count the number of hops;
i++

answer = #hops + arr.length

1 2 5 3 7 8 6 4
1 2 x 3 5 8 6 4 (7) +2
1 2 3 x 5 8 6 4 (7)
1 2 3 x 5 x 6 8 (7,4) +2
(7,4).length + # prev ops
------------------------------------
1 2 5 3 7 8 6 4


@i            cond             transformation   #hops

1
1

1 2
1 2

1 2 3
1 2 5
              q[i] - i // 3 - 4 
1 2 3 4           diff -1           1 2 3 4
1 2 5 3        q[4]=3 < q[3]=5 ? (yes) 1 2 3 5     +1

1 2 3 4 5    diff -2
1 2 3 5 7   q[5]=7 < q[]

1 2 3 4 5 6
1 2 3 5 7 8 

1 2 3 4 5 6 7   q[7] diff= -1         1 2 3 4 5 6 7
1 2 3 5 7 8 6    6 < q[6]=8 ? (yes)   1 2 3 5 7 6 8  +1